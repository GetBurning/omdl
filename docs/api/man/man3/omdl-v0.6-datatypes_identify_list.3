.TH "datatypes_identify_list" 3 "Tue Apr 4 2017" "Version v0.6" "omdl" \" -*- nroff -*-
.ad l
.nh
.SH NAME
datatypes_identify_list \- Lists
.PP
List data type identification\&.  

.SS "Files"

.in +1c
.ti -1c
.RI "file \fBdatatypes_identify_list\&.scad\fP"
.br
.RI "\fIList data type identification\&. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "function \fBn_almost_equal\fP (v1, v2, p=6)"
.br
.RI "\fITest if all elements of two lists of numbers are sufficiently equal\&. \fP"
.ti -1c
.RI "function \fBalmost_equal\fP (v1, v2, p=6)"
.br
.RI "\fITest if all numerical elements of two lists of values are sufficiently equal\&. \fP"
.ti -1c
.RI "function \fBcompare\fP (v1, v2, s=true)"
.br
.RI "\fIOrder to lists of arbitrary values\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
List data type identification\&. 

See validation \fBresults\fP\&. 
.SH "Function Documentation"
.PP 
.SS "function almost_equal (v1, v2, p = \fC6\fP)"

.PP
Test if all numerical elements of two lists of values are sufficiently equal\&. 
.PP
\fBParameters:\fP
.RS 4
\fIv1\fP <list> A list of values 1\&. 
.br
\fIv2\fP <list> A list of values 2\&. 
.br
\fIp\fP <number> The numerical precision\&.
.RE
.PP
\fBReturns:\fP
.RS 4
<boolean> \fBtrue\fP when all elements of each lists are sufficiently equal and \fBfalse\fP otherwise\&.
.RE
.PP
The 'distance' between two numbers must be less than pow(10,-p) to be considered almost equal\&. All numerical comparisons are performed to the specified precision\&. All non-numeric comparisons test for equality\&.
.PP
\fBNote:\fP
.RS 4
If the lists are scalar numbers, the function \fBn_almost_equal()\fP provides a more efficient test\&.
.RE
.PP
\fBWarning:\fP
.RS 4
Always returns \fBtrue\fP when both lists are empty\&. 
.RE
.PP

.SS "function compare (v1, v2, s = \fCtrue\fP)"

.PP
Order to lists of arbitrary values\&. 
.PP
\fBParameters:\fP
.RS 4
\fIv1\fP <list> A list of values 1\&. 
.br
\fIv2\fP <list> A list of values 2\&. 
.br
\fIs\fP <boolean> Order ranges by their numerical sum\&.
.RE
.PP
\fBReturns:\fP
.RS 4
<integer> \fB-1\fP when \fC(v2 < v1)\fP, \fB+1\fP when \fC(v2 > v1)\fP, and \fB0\fP when \fC(v2 == v1)\fP\&.
.RE
.PP
The following table summarizes how values are ordered\&.
.PP
order type \fCs\fP intra-type ordering  1 \fBundef\fP (singular) 2 number numerical comparison 3 boolean \fBfalse\fP < \fBtrue\fP 4 string lexical comparison 5 list lengths then element-wise comparison 6 range \fBtrue\fP compare sum of range elements 6 range \fBfalse\fP lengths then element-wise comparison 
.PP
\fBNote:\fP
.RS 4
When comparing two lists of equal length, the comparison continue element-by-element until an ordering can be determined\&. Two lists are equal when all elements have been compared and no ordering has been determined\&.
.RE
.PP
\fBWarning:\fP
.RS 4
The performance of element-wise comparisons of lists degrades with list size\&. 
.PP
The sum of a range may exceeded the intermediate variable storage capacity for long ranges\&. 
.RE
.PP

.SS "function n_almost_equal (v1, v2, p = \fC6\fP)"

.PP
Test if all elements of two lists of numbers are sufficiently equal\&. 
.PP
\fBParameters:\fP
.RS 4
\fIv1\fP <number-list> A list of numbers 1\&. 
.br
\fIv2\fP <number-list> A list of numbers 2\&. 
.br
\fIp\fP <number> The numerical precision\&.
.RE
.PP
\fBReturns:\fP
.RS 4
<boolean> \fBtrue\fP when the distance between \fCv1\fP and \fCv2\fP is less than \fCd\fP and \fBfalse\fP otherwise\&. Returns \fBfalse\fP when either list contains a non-numerica values, or when the lists are not of the same length\&.
.RE
.PP
The 'distance' between two numbers must be less than pow(10,-p) to be considered almost equal\&.
.PP
\fBNote:\fP
.RS 4
To compare general lists of values see \fBalmost_equal()\fP\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for omdl from the source code\&.

.TH "tv_prim_vector_r" 3 "Thu Feb 2 2017" "Version v0.4" "omdl" \" -*- nroff -*-
.ad l
.nh
.SH NAME
tv_prim_vector_r \- Validation Results 

.PP
.nf
1 ECHO: "OpenSCAD Version [2016, 12, 21]"
2 ECHO: "[ INFO ] run_test(); t01 passed: 'consts(undef)=[]'"
3 ECHO: "[ INFO ] run_test(); t02 passed: 'consts([])=[]'"
4 ECHO: "[ INFO ] run_test(); t03 passed: 'consts([0 : 0\&.5 : 9])=[]'"
5 ECHO: "[ INFO ] run_test(); t04 passed: 'consts(A string)=[]'"
6 ECHO: "[ INFO ] run_test(); t05 passed: 'consts(["orange", "apple", "grape", "banana"])=[]'"
7 ECHO: "[ INFO ] run_test(); t06 passed: 'consts(["b", "a", "n", "a", "n", "a", "s"])=[]'"
8 ECHO: "[ INFO ] run_test(); t07 passed: 'consts([undef])=[]'"
9 ECHO: "[ INFO ] run_test(); t08 passed: 'consts([[1, 2], [2, 3]])=[]'"
10 ECHO: "[ INFO ] run_test(); t09 passed: 'consts(["ab", [1, 2], [2, 3], [4, 5]])=[]'"
11 ECHO: "[ INFO ] run_test(); t10 passed: 'consts([[1, 2, 3], [4, 5, 6], [7, 8, 9], ["a", "b", "c"]])=[]'"
12 ECHO: "[ INFO ] run_test(); t11 passed: 'consts([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])=[]'"
13 ECHO: "[ INFO ] run_test(); t01 passed: 'vstr(undef)=undef'"
14 ECHO: "[ INFO ] run_test(); t02 passed: 'vstr([])='"
15 ECHO: "[ INFO ] run_test(); t03 passed: 'vstr([0 : 0\&.5 : 9])=[0 : 0\&.5 : 9]'"
16 ECHO: "[ INFO ] run_test(); t04 passed: 'vstr(A string)=A string'"
17 ECHO: "[ INFO ] run_test(); t05 passed: 'vstr(["orange", "apple", "grape", "banana"])=orangeapplegrapebanana'"
18 ECHO: "[ INFO ] run_test(); t06 passed: 'vstr(["b", "a", "n", "a", "n", "a", "s"])=bananas'"
19 ECHO: "[ INFO ] run_test(); t07 passed: 'vstr([undef])=undef'"
20 ECHO: "[ INFO ] run_test(); t08 passed: 'vstr([[1, 2], [2, 3]])=[1, 2][2, 3]'"
21 ECHO: "[ INFO ] run_test(); t09 passed: 'vstr(["ab", [1, 2], [2, 3], [4, 5]])=ab[1, 2][2, 3][4, 5]'"
22 ECHO: "[ INFO ] run_test(); t10 passed: 'vstr([[1, 2, 3], [4, 5, 6], [7, 8, 9], ["a", "b", "c"]])=[1, 2, 3][4, 5, 6][7, 8, 9]["a", "b", "c"]'"
23 ECHO: "[ INFO ] run_test(); t11 passed: 'vstr([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])=0123456789101112131415'"
24 ECHO: "[ INFO ] run_test(); t01 passed: 'sum(undef)=undef'"
25 ECHO: "[ INFO ] run_test(); t02 passed: 'sum([])=0'"
26 ECHO: "[ INFO ] run_test(); t03 passed: 'sum([0 : 0\&.5 : 9])=85\&.5'"
27 ECHO: "[ INFO ] run_test(); t04 passed: 'sum(A string)=undef'"
28 ECHO: "[ INFO ] run_test(); t05 passed: 'sum(["orange", "apple", "grape", "banana"])=undef'"
29 ECHO: "[ INFO ] run_test(); t06 passed: 'sum(["b", "a", "n", "a", "n", "a", "s"])=undef'"
30 ECHO: "[ INFO ] run_test(); t07 passed: 'sum([undef])=undef'"
31 ECHO: "[ INFO ] run_test(); t08 passed: 'sum([[1, 2], [2, 3]])=[3, 5]'"
32 ECHO: "[ INFO ] run_test(); t09 passed: 'sum(["ab", [1, 2], [2, 3], [4, 5]])=undef'"
33 ECHO: "[ INFO ] run_test(); t10 passed: 'sum([[1, 2, 3], [4, 5, 6], [7, 8, 9], ["a", "b", "c"]])=[undef, undef, undef]'"
34 ECHO: "[ INFO ] run_test(); t11 passed: 'sum([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])=120'"
35 ECHO: "[ INFO ] run_test(); t01 passed: 'defined_or_D(undef)=default'"
36 ECHO: "[ INFO ] run_test(); t02 passed: 'defined_or_D([])=[]'"
37 ECHO: "[ INFO ] run_test(); t03 passed: 'defined_or_D([0 : 0\&.5 : 9])=[0 : 0\&.5 : 9]'"
38 ECHO: "[ INFO ] run_test(); t04 passed: 'defined_or_D(A string)=A string'"
39 ECHO: "[ INFO ] run_test(); t05 passed: 'defined_or_D(["orange", "apple", "grape", "banana"])=["orange", "apple", "grape", "banana"]'"
40 ECHO: "[ INFO ] run_test(); t06 passed: 'defined_or_D(["b", "a", "n", "a", "n", "a", "s"])=["b", "a", "n", "a", "n", "a", "s"]'"
41 ECHO: "[ INFO ] run_test(); t07 passed: 'defined_or_D([undef])=[undef]'"
42 ECHO: "[ INFO ] run_test(); t08 passed: 'defined_or_D([[1, 2], [2, 3]])=[[1, 2], [2, 3]]'"
43 ECHO: "[ INFO ] run_test(); t09 passed: 'defined_or_D(["ab", [1, 2], [2, 3], [4, 5]])=["ab", [1, 2], [2, 3], [4, 5]]'"
44 ECHO: "[ INFO ] run_test(); t10 passed: 'defined_or_D([[1, 2, 3], [4, 5, 6], [7, 8, 9], ["a", "b", "c"]])=[[1, 2, 3], [4, 5, 6], [7, 8, 9], ["a", "b", "c"]]'"
45 ECHO: "[ INFO ] run_test(); t11 passed: 'defined_or_D([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]'"
46 ECHO: "[ INFO ] run_test(); t01 passed: 'edefined_or_DE3(undef)=default'"
47 ECHO: "[ INFO ] run_test(); t02 passed: 'edefined_or_DE3([])=default'"
48 ECHO: "[ INFO ] run_test(); t03 passed: 'edefined_or_DE3([0 : 0\&.5 : 9])=default'"
49 ECHO: "[ INFO ] run_test(); t04 passed: 'edefined_or_DE3(A string)=t'"
50 ECHO: "[ INFO ] run_test(); t05 passed: 'edefined_or_DE3(["orange", "apple", "grape", "banana"])=banana'"
51 ECHO: "[ INFO ] run_test(); t06 passed: 'edefined_or_DE3(["b", "a", "n", "a", "n", "a", "s"])=a'"
52 ECHO: "[ INFO ] run_test(); t07 passed: 'edefined_or_DE3([undef])=default'"
53 ECHO: "[ INFO ] run_test(); t08 passed: 'edefined_or_DE3([[1, 2], [2, 3]])=default'"
54 ECHO: "[ INFO ] run_test(); t09 passed: 'edefined_or_DE3(["ab", [1, 2], [2, 3], [4, 5]])=[4, 5]'"
55 ECHO: "[ INFO ] run_test(); t10 passed: 'edefined_or_DE3([[1, 2, 3], [4, 5, 6], [7, 8, 9], ["a", "b", "c"]])=["a", "b", "c"]'"
56 ECHO: "[ INFO ] run_test(); t11 passed: 'edefined_or_DE3([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])=3'"
57 ECHO: "[ INFO ] run_test(); t01 passed: 'first(undef)=undef'"
58 ECHO: "[ INFO ] run_test(); t02 passed: 'first([])=undef'"
59 ECHO: "[ INFO ] run_test(); t03 passed: 'first([0 : 0\&.5 : 9])=undef'"
60 ECHO: "[ INFO ] run_test(); t04 passed: 'first(A string)=A'"
61 ECHO: "[ INFO ] run_test(); t05 passed: 'first(["orange", "apple", "grape", "banana"])=orange'"
62 ECHO: "[ INFO ] run_test(); t06 passed: 'first(["b", "a", "n", "a", "n", "a", "s"])=b'"
63 ECHO: "[ INFO ] run_test(); t07 passed: 'first([undef])=undef'"
64 ECHO: "[ INFO ] run_test(); t08 passed: 'first([[1, 2], [2, 3]])=[1, 2]'"
65 ECHO: "[ INFO ] run_test(); t09 passed: 'first(["ab", [1, 2], [2, 3], [4, 5]])=ab'"
66 ECHO: "[ INFO ] run_test(); t10 passed: 'first([[1, 2, 3], [4, 5, 6], [7, 8, 9], ["a", "b", "c"]])=[1, 2, 3]'"
67 ECHO: "[ INFO ] run_test(); t11 passed: 'first([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])=0'"
68 ECHO: "[ INFO ] run_test(); t01 passed: 'second(undef)=undef'"
69 ECHO: "[ INFO ] run_test(); t02 passed: 'second([])=undef'"
70 ECHO: "[ INFO ] run_test(); t03 passed: 'second([0 : 0\&.5 : 9])=undef'"
71 ECHO: "[ INFO ] run_test(); t04 passed: 'second(A string)= '"
72 ECHO: "[ INFO ] run_test(); t05 passed: 'second(["orange", "apple", "grape", "banana"])=apple'"
73 ECHO: "[ INFO ] run_test(); t06 passed: 'second(["b", "a", "n", "a", "n", "a", "s"])=a'"
74 ECHO: "[ INFO ] run_test(); t07 passed: 'second([undef])=undef'"
75 ECHO: "[ INFO ] run_test(); t08 passed: 'second([[1, 2], [2, 3]])=[2, 3]'"
76 ECHO: "[ INFO ] run_test(); t09 passed: 'second(["ab", [1, 2], [2, 3], [4, 5]])=[1, 2]'"
77 ECHO: "[ INFO ] run_test(); t10 passed: 'second([[1, 2, 3], [4, 5, 6], [7, 8, 9], ["a", "b", "c"]])=[4, 5, 6]'"
78 ECHO: "[ INFO ] run_test(); t11 passed: 'second([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])=1'"
79 ECHO: "[ INFO ] run_test(); t01 passed: 'last(undef)=undef'"
80 ECHO: "[ INFO ] run_test(); t02 passed: 'last([])=undef'"
81 ECHO: "[ INFO ] run_test(); t03 passed: 'last([0 : 0\&.5 : 9])=undef'"
82 ECHO: "[ INFO ] run_test(); t04 passed: 'last(A string)=g'"
83 ECHO: "[ INFO ] run_test(); t05 passed: 'last(["orange", "apple", "grape", "banana"])=banana'"
84 ECHO: "[ INFO ] run_test(); t06 passed: 'last(["b", "a", "n", "a", "n", "a", "s"])=s'"
85 ECHO: "[ INFO ] run_test(); t07 passed: 'last([undef])=undef'"
86 ECHO: "[ INFO ] run_test(); t08 passed: 'last([[1, 2], [2, 3]])=[2, 3]'"
87 ECHO: "[ INFO ] run_test(); t09 passed: 'last(["ab", [1, 2], [2, 3], [4, 5]])=[4, 5]'"
88 ECHO: "[ INFO ] run_test(); t10 passed: 'last([[1, 2, 3], [4, 5, 6], [7, 8, 9], ["a", "b", "c"]])=["a", "b", "c"]'"
89 ECHO: "[ INFO ] run_test(); t11 passed: 'last([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])=15'"
90 ECHO: "[ INFO ] run_test(); t01 passed: 'head(undef)=undef'"
91 ECHO: "[ INFO ] run_test(); t02 passed: 'head([])=undef'"
92 ECHO: "[ INFO ] run_test(); t03 passed: 'head([0 : 0\&.5 : 9])=undef'"
93 ECHO: "[ INFO ] run_test(); t04 passed: 'head(A string)=["A"]'"
94 ECHO: "[ INFO ] run_test(); t05 passed: 'head(["orange", "apple", "grape", "banana"])=["orange"]'"
95 ECHO: "[ INFO ] run_test(); t06 passed: 'head(["b", "a", "n", "a", "n", "a", "s"])=["b"]'"
96 ECHO: "[ INFO ] run_test(); t07 passed: 'head([undef])=[undef]'"
97 ECHO: "[ INFO ] run_test(); t08 passed: 'head([[1, 2], [2, 3]])=[[1, 2]]'"
98 ECHO: "[ INFO ] run_test(); t09 passed: 'head(["ab", [1, 2], [2, 3], [4, 5]])=["ab"]'"
99 ECHO: "[ INFO ] run_test(); t10 passed: 'head([[1, 2, 3], [4, 5, 6], [7, 8, 9], ["a", "b", "c"]])=[[1, 2, 3]]'"
100 ECHO: "[ INFO ] run_test(); t11 passed: 'head([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])=[0]'"
101 ECHO: "[ INFO ] run_test(); t01 passed: 'tail(undef)=undef'"
102 ECHO: "[ INFO ] run_test(); t02 passed: 'tail([])=undef'"
103 ECHO: "[ INFO ] run_test(); t03 passed: 'tail([0 : 0\&.5 : 9])=undef'"
104 ECHO: "[ INFO ] run_test(); t04 passed: 'tail(A string)=[" ", "s", "t", "r", "i", "n", "g"]'"
105 ECHO: "[ INFO ] run_test(); t05 passed: 'tail(["orange", "apple", "grape", "banana"])=["apple", "grape", "banana"]'"
106 ECHO: "[ INFO ] run_test(); t06 passed: 'tail(["b", "a", "n", "a", "n", "a", "s"])=["a", "n", "a", "n", "a", "s"]'"
107 ECHO: "[ INFO ] run_test(); t07 passed: 'tail([undef])=[]'"
108 ECHO: "[ INFO ] run_test(); t08 passed: 'tail([[1, 2], [2, 3]])=[[2, 3]]'"
109 ECHO: "[ INFO ] run_test(); t09 passed: 'tail(["ab", [1, 2], [2, 3], [4, 5]])=[[1, 2], [2, 3], [4, 5]]'"
110 ECHO: "[ INFO ] run_test(); t10 passed: 'tail([[1, 2, 3], [4, 5, 6], [7, 8, 9], ["a", "b", "c"]])=[[4, 5, 6], [7, 8, 9], ["a", "b", "c"]]'"
111 ECHO: "[ INFO ] run_test(); t11 passed: 'tail([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]'"
112 ECHO: "[ INFO ] run_test(); t01 passed: 'rselect_02(undef)=undef'"
113 ECHO: "[ INFO ] run_test(); t02 passed: 'rselect_02([])=[]'"
114 ECHO: "[ INFO ] run_test(); t03 passed: 'rselect_02([0 : 0\&.5 : 9])=undef'"
115 ECHO: "[ INFO ] run_test(); t04 passed: 'rselect_02(A string)=["A", " ", "s"]'"
116 ECHO: "[ INFO ] run_test(); t05 passed: 'rselect_02(["orange", "apple", "grape", "banana"])=["orange", "apple", "grape"]'"
117 ECHO: "[ INFO ] run_test(); t06 passed: 'rselect_02(["b", "a", "n", "a", "n", "a", "s"])=["b", "a", "n"]'"
118 ECHO: "[ INFO ] run_test(); t07 passed: 'rselect_02([undef])=undef'"
119 ECHO: "[ INFO ] run_test(); t08 passed: 'rselect_02([[1, 2], [2, 3]])=undef'"
120 ECHO: "[ INFO ] run_test(); t09 passed: 'rselect_02(["ab", [1, 2], [2, 3], [4, 5]])=["ab", [1, 2], [2, 3]]'"
121 ECHO: "[ INFO ] run_test(); t10 passed: 'rselect_02([[1, 2, 3], [4, 5, 6], [7, 8, 9], ["a", "b", "c"]])=[[1, 2, 3], [4, 5, 6], [7, 8, 9]]'"
122 ECHO: "[ INFO ] run_test(); t11 passed: 'rselect_02([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])=[0, 1, 2]'"
123 ECHO: "[ INFO ] run_test(); t01 passed: 'eselect_F(undef)=undef'"
124 ECHO: "[ INFO ] run_test(); t02 passed: 'eselect_F([])=[]'"
125 ECHO: "[ INFO ] run_test(); t03 passed: 'eselect_F([0 : 0\&.5 : 9])=undef'"
126 ECHO: "[ INFO ] run_test(); t04 passed: 'eselect_F(A string)=["A", " ", "s", "t", "r", "i", "n", "g"]'"
127 ECHO: "[ INFO ] run_test(); t05 passed: 'eselect_F(["orange", "apple", "grape", "banana"])=["o", "a", "g", "b"]'"
128 ECHO: "[ INFO ] run_test(); t06 passed: 'eselect_F(["b", "a", "n", "a", "n", "a", "s"])=["b", "a", "n", "a", "n", "a", "s"]'"
129 ECHO: "[ INFO ] run_test(); t07 passed: 'eselect_F([undef])=[undef]'"
130 ECHO: "[ INFO ] run_test(); t08 passed: 'eselect_F([[1, 2], [2, 3]])=[1, 2]'"
131 ECHO: "[ INFO ] run_test(); t09 passed: 'eselect_F(["ab", [1, 2], [2, 3], [4, 5]])=["a", 1, 2, 4]'"
132 ECHO: "[ INFO ] run_test(); t10 passed: 'eselect_F([[1, 2, 3], [4, 5, 6], [7, 8, 9], ["a", "b", "c"]])=[1, 4, 7, "a"]'"
133 ECHO: "[ INFO ] run_test(); t11 *skip*: 'eselect_F(Vector of integers 0 to 15)'"
134 ECHO: "[ INFO ] run_test(); t01 passed: 'eselect_L(undef)=undef'"
135 ECHO: "[ INFO ] run_test(); t02 passed: 'eselect_L([])=[]'"
136 ECHO: "[ INFO ] run_test(); t03 passed: 'eselect_L([0 : 0\&.5 : 9])=undef'"
137 ECHO: "[ INFO ] run_test(); t04 passed: 'eselect_L(A string)=["A", " ", "s", "t", "r", "i", "n", "g"]'"
138 ECHO: "[ INFO ] run_test(); t05 passed: 'eselect_L(["orange", "apple", "grape", "banana"])=["e", "e", "e", "a"]'"
139 ECHO: "[ INFO ] run_test(); t06 passed: 'eselect_L(["b", "a", "n", "a", "n", "a", "s"])=["b", "a", "n", "a", "n", "a", "s"]'"
140 ECHO: "[ INFO ] run_test(); t07 passed: 'eselect_L([undef])=[undef]'"
141 ECHO: "[ INFO ] run_test(); t08 passed: 'eselect_L([[1, 2], [2, 3]])=[2, 3]'"
142 ECHO: "[ INFO ] run_test(); t09 passed: 'eselect_L(["ab", [1, 2], [2, 3], [4, 5]])=["b", 2, 3, 5]'"
143 ECHO: "[ INFO ] run_test(); t10 passed: 'eselect_L([[1, 2, 3], [4, 5, 6], [7, 8, 9], ["a", "b", "c"]])=[3, 6, 9, "c"]'"
144 ECHO: "[ INFO ] run_test(); t11 *skip*: 'eselect_L(Vector of integers 0 to 15)'"
145 ECHO: "[ INFO ] run_test(); t01 passed: 'eselect_1(undef)=undef'"
146 ECHO: "[ INFO ] run_test(); t02 passed: 'eselect_1([])=[]'"
147 ECHO: "[ INFO ] run_test(); t03 passed: 'eselect_1([0 : 0\&.5 : 9])=undef'"
148 ECHO: "[ INFO ] run_test(); t04 *skip*: 'eselect_1(A string)'"
149 ECHO: "[ INFO ] run_test(); t05 passed: 'eselect_1(["orange", "apple", "grape", "banana"])=["r", "p", "r", "a"]'"
150 ECHO: "[ INFO ] run_test(); t06 *skip*: 'eselect_1(Test vector 02)'"
151 ECHO: "[ INFO ] run_test(); t07 passed: 'eselect_1([undef])=[undef]'"
152 ECHO: "[ INFO ] run_test(); t08 passed: 'eselect_1([[1, 2], [2, 3]])=[2, 3]'"
153 ECHO: "[ INFO ] run_test(); t09 passed: 'eselect_1(["ab", [1, 2], [2, 3], [4, 5]])=["b", 2, 3, 5]'"
154 ECHO: "[ INFO ] run_test(); t10 passed: 'eselect_1([[1, 2, 3], [4, 5, 6], [7, 8, 9], ["a", "b", "c"]])=[2, 5, 8, "b"]'"
155 ECHO: "[ INFO ] run_test(); t11 *skip*: 'eselect_1(Vector of integers 0 to 15)'"
156 ECHO: "[ INFO ] run_test(); t01 passed: 'smerge(undef)=undef'"
157 ECHO: "[ INFO ] run_test(); t02 passed: 'smerge([])=[]'"
158 ECHO: "[ INFO ] run_test(); t03 passed: 'smerge([0 : 0\&.5 : 9])=[[0 : 0\&.5 : 9]]'"
159 ECHO: "[ INFO ] run_test(); t04 passed: 'smerge(A string)=["A string"]'"
160 ECHO: "[ INFO ] run_test(); t05 passed: 'smerge(["orange", "apple", "grape", "banana"])=["orange", "apple", "grape", "banana"]'"
161 ECHO: "[ INFO ] run_test(); t06 passed: 'smerge(["b", "a", "n", "a", "n", "a", "s"])=["b", "a", "n", "a", "n", "a", "s"]'"
162 ECHO: "[ INFO ] run_test(); t07 passed: 'smerge([undef])=[undef]'"
163 ECHO: "[ INFO ] run_test(); t08 passed: 'smerge([[1, 2], [2, 3]])=[1, 2, 2, 3]'"
164 ECHO: "[ INFO ] run_test(); t09 passed: 'smerge(["ab", [1, 2], [2, 3], [4, 5]])=["ab", 1, 2, 2, 3, 4, 5]'"
165 ECHO: "[ INFO ] run_test(); t10 passed: 'smerge([[1, 2, 3], [4, 5, 6], [7, 8, 9], ["a", "b", "c"]])=[1, 2, 3, 4, 5, 6, 7, 8, 9, "a", "b", "c"]'"
166 ECHO: "[ INFO ] run_test(); t11 passed: 'smerge([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]'"
167 ECHO: "[ INFO ] run_test(); t01 passed: 'pmerge(undef)=undef'"
168 ECHO: "[ INFO ] run_test(); t02 passed: 'pmerge([])=[]'"
169 ECHO: "[ INFO ] run_test(); t03 passed: 'pmerge([0 : 0\&.5 : 9])=undef'"
170 ECHO: "[ INFO ] run_test(); t04 passed: 'pmerge(A string)=["A string"]'"
171 ECHO: "[ INFO ] run_test(); t05 passed: 'pmerge(["orange", "apple", "grape", "banana"])=[["o", "a", "g", "b"], ["r", "p", "r", "a"], ["a", "p", "a", "n"], ["n", "l", "p", "a"], ["g", "e", "e", "n"]]'"
172 ECHO: "[ INFO ] run_test(); t06 passed: 'pmerge(["b", "a", "n", "a", "n", "a", "s"])=[["b", "a", "n", "a", "n", "a", "s"]]'"
173 ECHO: "[ INFO ] run_test(); t07 passed: 'pmerge([undef])=undef'"
174 ECHO: "[ INFO ] run_test(); t08 passed: 'pmerge([[1, 2], [2, 3]])=[[1, 2], [2, 3]]'"
175 ECHO: "[ INFO ] run_test(); t09 passed: 'pmerge(["ab", [1, 2], [2, 3], [4, 5]])=[["a", 1, 2, 4], ["b", 2, 3, 5]]'"
176 ECHO: "[ INFO ] run_test(); t10 passed: 'pmerge([[1, 2, 3], [4, 5, 6], [7, 8, 9], ["a", "b", "c"]])=[[1, 4, 7, "a"], [2, 5, 8, "b"], [3, 6, 9, "c"]]'"
177 ECHO: "[ INFO ] run_test(); t11 passed: 'pmerge([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])=undef'"
178 ECHO: "[ INFO ] run_test(); t01 passed: 'reverse(undef)=undef'"
179 ECHO: "[ INFO ] run_test(); t02 passed: 'reverse([])=[]'"
180 ECHO: "[ INFO ] run_test(); t03 passed: 'reverse([0 : 0\&.5 : 9])=undef'"
181 ECHO: "[ INFO ] run_test(); t04 passed: 'reverse(A string)=["g", "n", "i", "r", "t", "s", " ", "A"]'"
182 ECHO: "[ INFO ] run_test(); t05 passed: 'reverse(["orange", "apple", "grape", "banana"])=["banana", "grape", "apple", "orange"]'"
183 ECHO: "[ INFO ] run_test(); t06 passed: 'reverse(["b", "a", "n", "a", "n", "a", "s"])=["s", "a", "n", "a", "n", "a", "b"]'"
184 ECHO: "[ INFO ] run_test(); t07 passed: 'reverse([undef])=[undef]'"
185 ECHO: "[ INFO ] run_test(); t08 passed: 'reverse([[1, 2], [2, 3]])=[[2, 3], [1, 2]]'"
186 ECHO: "[ INFO ] run_test(); t09 passed: 'reverse(["ab", [1, 2], [2, 3], [4, 5]])=[[4, 5], [2, 3], [1, 2], "ab"]'"
187 ECHO: "[ INFO ] run_test(); t10 passed: 'reverse([[1, 2, 3], [4, 5, 6], [7, 8, 9], ["a", "b", "c"]])=[["a", "b", "c"], [7, 8, 9], [4, 5, 6], [1, 2, 3]]'"
188 ECHO: "[ INFO ] run_test(); t11 passed: 'reverse([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])=[15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]'"
189 ECHO: "[ INFO ] run_test(); t01 passed: 'qsort(undef)=undef'"
190 ECHO: "[ INFO ] run_test(); t02 passed: 'qsort([])=[]'"
191 ECHO: "[ INFO ] run_test(); t03 passed: 'qsort([0 : 0\&.5 : 9])=undef'"
192 ECHO: "[ INFO ] run_test(); t04 passed: 'qsort(A string)=undef'"
193 ECHO: "[ INFO ] run_test(); t05 passed: 'qsort(["orange", "apple", "grape", "banana"])=["apple", "banana", "grape", "orange"]'"
194 ECHO: "[ INFO ] run_test(); t06 passed: 'qsort(["b", "a", "n", "a", "n", "a", "s"])=["a", "a", "a", "b", "n", "n", "s"]'"
195 ECHO: "[ INFO ] run_test(); t07 passed: 'qsort([undef])=undef'"
196 ECHO: "[ INFO ] run_test(); t08 passed: 'qsort([[1, 2], [2, 3]])=undef'"
197 ECHO: "[ INFO ] run_test(); t09 passed: 'qsort(["ab", [1, 2], [2, 3], [4, 5]])=undef'"
198 ECHO: "[ INFO ] run_test(); t10 passed: 'qsort([[1, 2, 3], [4, 5, 6], [7, 8, 9], ["a", "b", "c"]])=undef'"
199 ECHO: "[ INFO ] run_test(); t11 passed: 'qsort([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]'"
200 ECHO: "[ INFO ] run_test(); t01 passed: 'qsort2_HR(undef)=undef'"
201 ECHO: "[ INFO ] run_test(); t02 passed: 'qsort2_HR([])=[]'"
202 ECHO: "[ INFO ] run_test(); t03 passed: 'qsort2_HR([0 : 0\&.5 : 9])=undef'"
203 ECHO: "[ INFO ] run_test(); t04 passed: 'qsort2_HR(A string)=undef'"
204 ECHO: "[ INFO ] run_test(); t05 passed: 'qsort2_HR(["orange", "apple", "grape", "banana"])=["orange", "grape", "banana", "apple"]'"
205 ECHO: "[ INFO ] run_test(); t06 passed: 'qsort2_HR(["b", "a", "n", "a", "n", "a", "s"])=["s", "n", "n", "b", "a", "a", "a"]'"
206 ECHO: "[ INFO ] run_test(); t07 passed: 'qsort2_HR([undef])=[undef]'"
207 ECHO: "[ INFO ] run_test(); t08 passed: 'qsort2_HR([[1, 2], [2, 3]])=[[3, 2], [2, 1]]'"
208 ECHO: "[ INFO ] run_test(); t09 passed: 'qsort2_HR(["ab", [1, 2], [2, 3], [4, 5]])=[[5, 4], [3, 2], [2, 1], "ab"]'"
209 ECHO: "[ INFO ] run_test(); t10 passed: 'qsort2_HR([[1, 2, 3], [4, 5, 6], [7, 8, 9], ["a", "b", "c"]])=[["c", "b", "a"], [9, 8, 7], [6, 5, 4], [3, 2, 1]]'"
210 ECHO: "[ INFO ] run_test(); t11 passed: 'qsort2_HR([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])=[15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]'"
211 ECHO: "[ INFO ] run_test(); t01 passed: 'strip(undef)=undef'"
212 ECHO: "[ INFO ] run_test(); t02 passed: 'strip([])=[]'"
213 ECHO: "[ INFO ] run_test(); t03 passed: 'strip([0 : 0\&.5 : 9])=undef'"
214 ECHO: "[ INFO ] run_test(); t04 passed: 'strip(A string)=["A", " ", "s", "t", "r", "i", "n", "g"]'"
215 ECHO: "[ INFO ] run_test(); t05 passed: 'strip(["orange", "apple", "grape", "banana"])=["orange", "apple", "grape", "banana"]'"
216 ECHO: "[ INFO ] run_test(); t06 passed: 'strip(["b", "a", "n", "a", "n", "a", "s"])=["b", "a", "n", "a", "n", "a", "s"]'"
217 ECHO: "[ INFO ] run_test(); t07 passed: 'strip([undef])=[undef]'"
218 ECHO: "[ INFO ] run_test(); t08 passed: 'strip([[1, 2], [2, 3]])=[[1, 2], [2, 3]]'"
219 ECHO: "[ INFO ] run_test(); t09 passed: 'strip(["ab", [1, 2], [2, 3], [4, 5]])=["ab", [1, 2], [2, 3], [4, 5]]'"
220 ECHO: "[ INFO ] run_test(); t10 passed: 'strip([[1, 2, 3], [4, 5, 6], [7, 8, 9], ["a", "b", "c"]])=[[1, 2, 3], [4, 5, 6], [7, 8, 9], ["a", "b", "c"]]'"
221 ECHO: "[ INFO ] run_test(); t11 passed: 'strip([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]'"
222 ECHO: "[ INFO ] run_test(); t01 passed: 'append_T0(undef)=undef'"
223 ECHO: "[ INFO ] run_test(); t02 passed: 'append_T0([])=[[0]]'"
224 ECHO: "[ INFO ] run_test(); t03 passed: 'append_T0([0 : 0\&.5 : 9])=undef'"
225 ECHO: "[ INFO ] run_test(); t04 passed: 'append_T0(A string)=[["A", 0], [" ", 0], ["s", 0], ["t", 0], ["r", 0], ["i", 0], ["n", 0], ["g", 0]]'"
226 ECHO: "[ INFO ] run_test(); t05 passed: 'append_T0(["orange", "apple", "grape", "banana"])=[["orange", 0], ["apple", 0], ["grape", 0], ["banana", 0]]'"
227 ECHO: "[ INFO ] run_test(); t06 passed: 'append_T0(["b", "a", "n", "a", "n", "a", "s"])=[["b", 0], ["a", 0], ["n", 0], ["a", 0], ["n", 0], ["a", 0], ["s", 0]]'"
228 ECHO: "[ INFO ] run_test(); t07 passed: 'append_T0([undef])=[[undef, 0]]'"
229 ECHO: "[ INFO ] run_test(); t08 passed: 'append_T0([[1, 2], [2, 3]])=[[1, 2, 0], [2, 3, 0]]'"
230 ECHO: "[ INFO ] run_test(); t09 passed: 'append_T0(["ab", [1, 2], [2, 3], [4, 5]])=[["ab", 0], [1, 2, 0], [2, 3, 0], [4, 5, 0]]'"
231 ECHO: "[ INFO ] run_test(); t10 passed: 'append_T0([[1, 2, 3], [4, 5, 6], [7, 8, 9], ["a", "b", "c"]])=[[1, 2, 3, 0], [4, 5, 6, 0], [7, 8, 9, 0], ["a", "b", "c", 0]]'"
232 ECHO: "[ INFO ] run_test(); t11 passed: 'append_T0([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])=[[0, 0], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0], [8, 0], [9, 0], [10, 0], [11, 0], [12, 0], [13, 0], [14, 0], [15, 0]]'"
233 ECHO: "[ INFO ] run_test(); t01 passed: 'insert_T0(undef)=undef'"
234 ECHO: "[ INFO ] run_test(); t02 passed: 'insert_T0([])=undef'"
235 ECHO: "[ INFO ] run_test(); t03 passed: 'insert_T0([0 : 0\&.5 : 9])=undef'"
236 ECHO: "[ INFO ] run_test(); t04 passed: 'insert_T0(A string)=undef'"
237 ECHO: "[ INFO ] run_test(); t05 passed: 'insert_T0(["orange", "apple", "grape", "banana"])=["orange", 0, "apple", "grape", "banana"]'"
238 ECHO: "[ INFO ] run_test(); t06 passed: 'insert_T0(["b", "a", "n", "a", "n", "a", "s"])=["b", "a", "n", "a", "n", "a", 0, "s"]'"
239 ECHO: "[ INFO ] run_test(); t07 passed: 'insert_T0([undef])=undef'"
240 ECHO: "[ INFO ] run_test(); t08 passed: 'insert_T0([[1, 2], [2, 3]])=[[1, 2], 0, [2, 3]]'"
241 ECHO: "[ INFO ] run_test(); t09 passed: 'insert_T0(["ab", [1, 2], [2, 3], [4, 5]])=["ab", [1, 2], 0, [2, 3], [4, 5]]'"
242 ECHO: "[ INFO ] run_test(); t10 passed: 'insert_T0([[1, 2, 3], [4, 5, 6], [7, 8, 9], ["a", "b", "c"]])=undef'"
243 ECHO: "[ INFO ] run_test(); t11 passed: 'insert_T0([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])=[0, 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]'"
244 ECHO: "[ INFO ] run_test(); t01 passed: 'delete_T0(undef)=undef'"
245 ECHO: "[ INFO ] run_test(); t02 passed: 'delete_T0([])=[]'"
246 ECHO: "[ INFO ] run_test(); t03 passed: 'delete_T0([0 : 0\&.5 : 9])=undef'"
247 ECHO: "[ INFO ] run_test(); t04 passed: 'delete_T0(A string)=["A", " ", "s", "t", "r", "i", "n", "g"]'"
248 ECHO: "[ INFO ] run_test(); t05 passed: 'delete_T0(["orange", "apple", "grape", "banana"])=["orange", "grape", "banana"]'"
249 ECHO: "[ INFO ] run_test(); t06 passed: 'delete_T0(["b", "a", "n", "a", "n", "a", "s"])=["b", "a", "n", "a", "n", "a"]'"
250 ECHO: "[ INFO ] run_test(); t07 passed: 'delete_T0([undef])=[undef]'"
251 ECHO: "[ INFO ] run_test(); t08 passed: 'delete_T0([[1, 2], [2, 3]])=[[1, 2]]'"
252 ECHO: "[ INFO ] run_test(); t09 passed: 'delete_T0(["ab", [1, 2], [2, 3], [4, 5]])=["ab", [1, 2], [4, 5]]'"
253 ECHO: "[ INFO ] run_test(); t10 passed: 'delete_T0([[1, 2, 3], [4, 5, 6], [7, 8, 9], ["a", "b", "c"]])=[[1, 2, 3], [4, 5, 6], [7, 8, 9], ["a", "b", "c"]]'"
254 ECHO: "[ INFO ] run_test(); t11 passed: 'delete_T0([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])=[0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]'"

.fi
.PP
 
